<launch>
<!--============================================================================
    SET UP ARGUMENTS
=============================================================================-->
    <arg name="amcl" default="true" />
    <arg name="fake_odom" default="true"/>
    <arg name="speed" default="0.7"/>

<!--============================================================================
    START SCAN MATCHING SYSTEM (to improve odometry)
=============================================================================-->
    
    <group ns="laser_scan_matcher" if="$(arg fake_odom)">
      <remap from="scan" to="/arty/base_scan" />
      <remap from="odom" to="/arty/odom"/>
      <remap from="imu/data" to="/arty/imu/data"/>

      <!-- Run laser scan matcher node for better odometry -->
      <node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher" required="true" >
        <param name="~use_imu" value="false" />
        <param name="~use_odom" value="false" />
        <param name="~publish_pose" value="false" />
        <param name="~do_alpha_test" value="0"/>
        <param name="~fixed_frame" value="odom"/>
        <param name="~outliers_adaptive_order" value="0.9"/>
      </node>
    </group>

<!--============================================================================
    START OBSTACLE AVOIDANCE
=============================================================================-->
<!--     <group ns="arty" >
      <node pkg="obstacle_avoidance" type="obs_avoid.py" name="obstacle_avoidance" required="true">
        <remap from="arty/main_js_cmd_vel" to="main_js_cmd_vel"/>
      </node>
      <param name="forward_scale" value="$(arg speed)"/>
      <param name="backward_scale" value="$(arg speed)"/>
      <param name="turn_scale" value="$(arg speed)"/>

    </group> -->

<!--============================================================================
    START RVIZ
=============================================================================-->
    <node pkg="rviz" type="rviz" name="rviz" required="false"/>

<!--============================================================================
    START GMAPPING
=============================================================================-->

  <group ns="arty">
    <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
      <remap from="scan" to="/arty/base_scan"/>
      <param name="odom_frame" value="odom"/>
      <param name="map_update_interval" value="1.0"/>
      <param name="maxUrange" value="3.0"/> <!-- The maximum usable range of the laser - cropped to this value -->
      <param name="sigma" value="0.05"/>
      <param name="kernelSize" value="1"/>
      <param name="lstep" value="0.05"/>
      <param name="astep" value="0.05"/>
      <param name="iterations" value="5"/>
      <param name="lsigma" value="0.075"/>
      <param name="ogain" value="3.0"/>
      <param name="lskip" value="0"/>
      <param name="srr" value="0.01"/> <!-- error for translation and rotation -->
      <param name="srt" value="0.02"/> <!-- error for translation and rotation -->
      <param name="str" value="0.01"/> <!-- error for translation and rotation -->
      <param name="stt" value="0.02"/> <!-- error for translation and rotation -->
      <param name="linearUpdate" value="0.5"/>
      <param name="angularUpdate" value="0.436"/>
      <param name="temporalUpdate" value="-1.0"/> <!-- time based update - may be handy -->
      <param name="resampleThreshold" value="0.5"/>
      <param name="particles" value="80"/>
      <param name="xmin" value="-50.0"/>
      <param name="ymin" value="-50.0"/>
      <param name="xmax" value="50.0"/>
      <param name="ymax" value="50.0"/>
      <param name="delta" value="0.05"/>
      <param name="llsamplerange" value="0.01"/>
      <param name="llsamplestep" value="0.01"/>
      <param name="lasamplerange" value="0.005"/>
      <param name="lasamplestep" value="0.005"/>
      <param name="maxRange" value="10.0"/>
      <!-- The maximum range of the sensor. If regions with no obstacles within the range of the sensor should appear as free space in the map, set maxUrange < maximum range of the real sensor <= maxRange. -->
    </node>

    <node pkg="tf" type="static_transform_publisher" name="base_link_transformer" args="0 0 0 0 0 0 base_link arty/base_link 10" />

    <node pkg="tf" type="static_transform_publisher" name="odom_transformer" args="0 0 0 0 0 0 /arty/base_link arty/SkippiOdometry 10" />

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <param name="base_global_planner" value="carrot_planner/CarrotPlanner"/>
      <rosparam file="$(find head_listener)/launch/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find head_listener)/launch/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find head_listener)/launch/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find head_listener)/launch/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find head_listener)/launch/base_local_planner_params.yaml" command="load" />
<!--       <remap from="/arty/cmd_vel" to="/fuckerrrr"/> -->
<!--       <remap from="/arty/map" to="/map"/> -->
<!--        <remap from="/arty/odom" to="/arty/SkippiOdometry"/> -->
    </node>
  </group>

  <node pkg="dynamic_reconfigure" name="dynparam" type="dynparam" args="load tfBroadcaster $(find skippi_setup_tf)/yaml/arty_future_tf.yaml" />
  
  <!-- Launch laser scanner combiner -->
  <include file="$(find arty_lasers)/launch/three_lasers_combiner.launch"/>

  <!-- Launch wheelchair tf -->
  <!-- The below coords are found by looking straight ahead! dont forget this!! -->
  <node pkg="tf" type="static_transform_publisher" name="wheelchair_broadcaster" args="0.95 0 0.5 3.14 -0.5 0 base_link xtion 10" />

  <!-- Launch head_pose_estimation-->
  <node pkg="head_pose" name="demo_head_pose_estimation" type="demo_head_pose_estimation" args="$(find head_pose)/src/config.txt"/>

  <!-- Launch head_pose listener -->
  <node pkg="head_listener" name="head_listener" type="listener.py" />

</launch>
